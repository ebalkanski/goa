// Code generated by goa v3.3.1, DO NOT EDIT.
//
// user client
//
// Command:
// $ goa gen github.com/ebalkanski/goa/design

package user

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "user" service client.
type Client struct {
	FetchEndpoint    goa.Endpoint
	FetchAllEndpoint goa.Endpoint
	CreateEndpoint   goa.Endpoint
	EditEndpoint     goa.Endpoint
	DeleteEndpoint   goa.Endpoint
}

// NewClient initializes a "user" service client given the endpoints.
func NewClient(fetch, fetchAll, create, edit, delete_ goa.Endpoint) *Client {
	return &Client{
		FetchEndpoint:    fetch,
		FetchAllEndpoint: fetchAll,
		CreateEndpoint:   create,
		EditEndpoint:     edit,
		DeleteEndpoint:   delete_,
	}
}

// Fetch calls the "fetch" endpoint of the "user" service.
func (c *Client) Fetch(ctx context.Context, p *FetchPayload) (res *User, err error) {
	var ires interface{}
	ires, err = c.FetchEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*User), nil
}

// FetchAll calls the "fetchAll" endpoint of the "user" service.
func (c *Client) FetchAll(ctx context.Context) (res *Users, err error) {
	var ires interface{}
	ires, err = c.FetchAllEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*Users), nil
}

// Create calls the "create" endpoint of the "user" service.
func (c *Client) Create(ctx context.Context, p *User) (err error) {
	_, err = c.CreateEndpoint(ctx, p)
	return
}

// Edit calls the "edit" endpoint of the "user" service.
func (c *Client) Edit(ctx context.Context, p *User) (err error) {
	_, err = c.EditEndpoint(ctx, p)
	return
}

// Delete calls the "delete" endpoint of the "user" service.
func (c *Client) Delete(ctx context.Context, p *DeletePayload) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}
