// Code generated by goa v3.3.1, DO NOT EDIT.
//
// user HTTP client types
//
// Command:
// $ goa gen github.com/ebalkanski/goa/design

package client

import (
	user "github.com/ebalkanski/goa/gen/user"
	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "user" service "create" endpoint HTTP
// request body.
type CreateRequestBody struct {
	Name string `form:"name" json:"name" xml:"name"`
	Age  int    `form:"age" json:"age" xml:"age"`
}

// EditRequestBody is the type of the "user" service "edit" endpoint HTTP
// request body.
type EditRequestBody struct {
	Name string `form:"name" json:"name" xml:"name"`
	Age  int    `form:"age" json:"age" xml:"age"`
}

// FetchResponseBody is the type of the "user" service "fetch" endpoint HTTP
// response body.
type FetchResponseBody struct {
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Age  *int    `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
}

// FetchAllResponseBody is the type of the "user" service "fetchAll" endpoint
// HTTP response body.
type FetchAllResponseBody struct {
	Users []*UserResponseBody `form:"users,omitempty" json:"users,omitempty" xml:"users,omitempty"`
}

// FetchBadRequestResponseBody is the type of the "user" service "fetch"
// endpoint HTTP response body for the "BadRequest" error.
type FetchBadRequestResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// FetchInternalServerErrorResponseBody is the type of the "user" service
// "fetch" endpoint HTTP response body for the "InternalServerError" error.
type FetchInternalServerErrorResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// FetchAllInternalServerErrorResponseBody is the type of the "user" service
// "fetchAll" endpoint HTTP response body for the "InternalServerError" error.
type FetchAllInternalServerErrorResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// CreateBadRequestResponseBody is the type of the "user" service "create"
// endpoint HTTP response body for the "BadRequest" error.
type CreateBadRequestResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// CreateInternalServerErrorResponseBody is the type of the "user" service
// "create" endpoint HTTP response body for the "InternalServerError" error.
type CreateInternalServerErrorResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// EditBadRequestResponseBody is the type of the "user" service "edit" endpoint
// HTTP response body for the "BadRequest" error.
type EditBadRequestResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// EditInternalServerErrorResponseBody is the type of the "user" service "edit"
// endpoint HTTP response body for the "InternalServerError" error.
type EditInternalServerErrorResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// DeleteBadRequestResponseBody is the type of the "user" service "delete"
// endpoint HTTP response body for the "BadRequest" error.
type DeleteBadRequestResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// DeleteInternalServerErrorResponseBody is the type of the "user" service
// "delete" endpoint HTTP response body for the "InternalServerError" error.
type DeleteInternalServerErrorResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// UserResponseBody is used to define fields on response body types.
type UserResponseBody struct {
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Age  *int    `form:"age,omitempty" json:"age,omitempty" xml:"age,omitempty"`
}

// NewCreateRequestBody builds the HTTP request body from the payload of the
// "create" endpoint of the "user" service.
func NewCreateRequestBody(p *user.User) *CreateRequestBody {
	body := &CreateRequestBody{
		Name: p.Name,
		Age:  p.Age,
	}
	return body
}

// NewEditRequestBody builds the HTTP request body from the payload of the
// "edit" endpoint of the "user" service.
func NewEditRequestBody(p *user.User) *EditRequestBody {
	body := &EditRequestBody{
		Name: p.Name,
		Age:  p.Age,
	}
	return body
}

// NewFetchUserOK builds a "user" service "fetch" endpoint result from a HTTP
// "OK" response.
func NewFetchUserOK(body *FetchResponseBody) *user.User {
	v := &user.User{
		Name: *body.Name,
		Age:  *body.Age,
	}

	return v
}

// NewFetchBadRequest builds a user service fetch endpoint BadRequest error.
func NewFetchBadRequest(body *FetchBadRequestResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewFetchInternalServerError builds a user service fetch endpoint
// InternalServerError error.
func NewFetchInternalServerError(body *FetchInternalServerErrorResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewFetchAllUsersOK builds a "user" service "fetchAll" endpoint result from a
// HTTP "OK" response.
func NewFetchAllUsersOK(body *FetchAllResponseBody) *user.Users {
	v := &user.Users{}
	if body.Users != nil {
		v.Users = make([]*user.User, len(body.Users))
		for i, val := range body.Users {
			v.Users[i] = unmarshalUserResponseBodyToUserUser(val)
		}
	}

	return v
}

// NewFetchAllInternalServerError builds a user service fetchAll endpoint
// InternalServerError error.
func NewFetchAllInternalServerError(body *FetchAllInternalServerErrorResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewCreateBadRequest builds a user service create endpoint BadRequest error.
func NewCreateBadRequest(body *CreateBadRequestResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewCreateInternalServerError builds a user service create endpoint
// InternalServerError error.
func NewCreateInternalServerError(body *CreateInternalServerErrorResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewEditBadRequest builds a user service edit endpoint BadRequest error.
func NewEditBadRequest(body *EditBadRequestResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewEditInternalServerError builds a user service edit endpoint
// InternalServerError error.
func NewEditInternalServerError(body *EditInternalServerErrorResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewDeleteBadRequest builds a user service delete endpoint BadRequest error.
func NewDeleteBadRequest(body *DeleteBadRequestResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// NewDeleteInternalServerError builds a user service delete endpoint
// InternalServerError error.
func NewDeleteInternalServerError(body *DeleteInternalServerErrorResponseBody) *user.GoaError {
	v := &user.GoaError{
		Message: *body.Message,
	}

	return v
}

// ValidateFetchResponseBody runs the validations defined on FetchResponseBody
func ValidateFetchResponseBody(body *FetchResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Age == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("age", "body"))
	}
	return
}

// ValidateFetchAllResponseBody runs the validations defined on
// FetchAllResponseBody
func ValidateFetchAllResponseBody(body *FetchAllResponseBody) (err error) {
	for _, e := range body.Users {
		if e != nil {
			if err2 := ValidateUserResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateFetchBadRequestResponseBody runs the validations defined on
// fetch_BadRequest_response_body
func ValidateFetchBadRequestResponseBody(body *FetchBadRequestResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateFetchInternalServerErrorResponseBody runs the validations defined on
// fetch_InternalServerError_response_body
func ValidateFetchInternalServerErrorResponseBody(body *FetchInternalServerErrorResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateFetchAllInternalServerErrorResponseBody runs the validations defined
// on fetchAll_InternalServerError_response_body
func ValidateFetchAllInternalServerErrorResponseBody(body *FetchAllInternalServerErrorResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateCreateBadRequestResponseBody runs the validations defined on
// create_BadRequest_response_body
func ValidateCreateBadRequestResponseBody(body *CreateBadRequestResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateCreateInternalServerErrorResponseBody runs the validations defined
// on create_InternalServerError_response_body
func ValidateCreateInternalServerErrorResponseBody(body *CreateInternalServerErrorResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateEditBadRequestResponseBody runs the validations defined on
// edit_BadRequest_response_body
func ValidateEditBadRequestResponseBody(body *EditBadRequestResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateEditInternalServerErrorResponseBody runs the validations defined on
// edit_InternalServerError_response_body
func ValidateEditInternalServerErrorResponseBody(body *EditInternalServerErrorResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateDeleteBadRequestResponseBody runs the validations defined on
// delete_BadRequest_response_body
func ValidateDeleteBadRequestResponseBody(body *DeleteBadRequestResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateDeleteInternalServerErrorResponseBody runs the validations defined
// on delete_InternalServerError_response_body
func ValidateDeleteInternalServerErrorResponseBody(body *DeleteInternalServerErrorResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}

// ValidateUserResponseBody runs the validations defined on UserResponseBody
func ValidateUserResponseBody(body *UserResponseBody) (err error) {
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Age == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("age", "body"))
	}
	return
}
