// Code generated by goa v3.3.1, DO NOT EDIT.
//
// user HTTP client CLI support package
//
// Command:
// $ goa gen github.com/ebalkanski/goa/design

package client

import (
	"encoding/json"
	"fmt"

	user "github.com/ebalkanski/goa/gen/user"
)

// BuildFetchPayload builds the payload for the user fetch endpoint from CLI
// flags.
func BuildFetchPayload(userFetchName string) (*user.FetchPayload, error) {
	var name string
	{
		name = userFetchName
	}
	v := &user.FetchPayload{}
	v.Name = name

	return v, nil
}

// BuildCreatePayload builds the payload for the user create endpoint from CLI
// flags.
func BuildCreatePayload(userCreateBody string) (*user.User, error) {
	var err error
	var body CreateRequestBody
	{
		err = json.Unmarshal([]byte(userCreateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"age\": 25,\n      \"name\": \"Bob\"\n   }'")
		}
	}
	v := &user.User{
		Name: body.Name,
		Age:  body.Age,
	}

	return v, nil
}

// BuildEditPayload builds the payload for the user edit endpoint from CLI
// flags.
func BuildEditPayload(userEditBody string) (*user.User, error) {
	var err error
	var body EditRequestBody
	{
		err = json.Unmarshal([]byte(userEditBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"age\": 25,\n      \"name\": \"Bob\"\n   }'")
		}
	}
	v := &user.User{
		Name: body.Name,
		Age:  body.Age,
	}

	return v, nil
}

// BuildDeletePayload builds the payload for the user delete endpoint from CLI
// flags.
func BuildDeletePayload(userDeleteName string) (*user.DeletePayload, error) {
	var name string
	{
		name = userDeleteName
	}
	v := &user.DeletePayload{}
	v.Name = name

	return v, nil
}
